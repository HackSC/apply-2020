# Orb 'circleci/slack@3.4.2' resolved to 'circleci/slack@3.4.2'
version: 2
jobs:
  E2ETest:
    docker:
      - image: cypress/included:3.2.0
        environment:
          TERM: xterm
    parallelism: 1
    steps:
      - checkout
      - run:
          command: yarn install --frozen-lockfile
      - run:
          name: Migrating
          command: npx sequelize-cli db:migrate
      - run:
          name: Running end to end tests
          command: yarn run E2ETest
      - store_artifacts:
          path: cypress/videos/odysseyTests
  build:
    docker:
      - image: circleci/node
    steps:
      - checkout
      - run:
          name: Installing
          command: yarn install
      - run:
          name: Migrating
          command: npx sequelize-cli db:migrate
      - run:
          name: Building
          command: yarn build
      - run:
          command: |
            echo 'export SLACK_BUILD_STATUS="fail"' >> $BASH_ENV
          name: Slack - Setting Failure Condition
          when: on_fail
      - run:
          command: |
            echo 'export SLACK_BUILD_STATUS="success"' >> $BASH_ENV
          name: Slack - Setting Success Condition
          when: on_success
      - run:
          command: |
            if [ ! -x /bin/bash ]; then
              echo Bash not installed.
              exit 1
            fi
          name: Provide error if non-bash shell
      - run:
          command: |
            current_branch_in_filter=false

            IFS="," read -ra BRANCH_FILTERS <<< "staging,develop"

            for i in "${BRANCH_FILTERS[@]}"; do
              if [ "${i}" == "${CIRCLE_BRANCH}" ]; then
                current_branch_in_filter=true
              fi
            done

            if [ "x" == "xstaging,develop" ] || [ "$current_branch_in_filter" = true ]; then
              # Provide error if no webhook is set and error. Otherwise continue
              if [ -z "${SLACK_WEBHOOK}" ]; then
                echo "NO SLACK WEBHOOK SET"
                echo "Please input your SLACK_WEBHOOK value either in the settings for this project, or as a parameter for this orb."
                exit 1
              else
                #Create Members string
                if [ -n "" ]; then
                  IFS="," read -ra SLACK_MEMBERS <<< ""
                  for i in "${SLACK_MEMBERS[@]}"; do
                    if [ $(echo ${i} | head -c 1) == "S" ]; then
                      SLACK_MENTIONS="${SLACK_MENTIONS}<!subteam^${i}> "
                    elif echo ${i} | grep -E "^(here|channel|everyone)$" > /dev/null; then
                      SLACK_MENTIONS="${SLACK_MENTIONS}<!${i}> "
                    else
                      SLACK_MENTIONS="${SLACK_MENTIONS}<@${i}> "
                    fi
                  done
                fi
                #If successful
                if [ "$SLACK_BUILD_STATUS" = "success" ]; then
                  #Skip if fail_only
                  if [ false = true ]; then
                    echo "The job completed successfully"
                    echo '"fail_only" is set to "true". No Slack notification sent.'
                  else
                    curl -X POST -H 'Content-type: application/json' \
                      --data "{ \
                                \"attachments\": [ \
                                  { \
                                    \"fallback\": \":tada: A $CIRCLE_JOB job has succeeded for $CIRCLE_PROJECT_REPONAME on the $CIRCLE_BRANCH branch! Triggered by: $CIRCLE_USERNAME :rocket:\", \
                                    \"text\": \":tada: A $CIRCLE_JOB job has succeeded for $CIRCLE_PROJECT_REPONAME on the $CIRCLE_BRANCH branch! Triggered by: $CIRCLE_USERNAME :rocket: $SLACK_MENTIONS\", \
                                    \"fields\": [ \
                                      { \
                                        \"title\": \"Project\", \
                                        \"value\": \"$CIRCLE_PROJECT_REPONAME\", \
                                        \"short\": true \
                                      }, \
                                      { \
                                        \"title\": \"Job Number\", \
                                        \"value\": \"$CIRCLE_BUILD_NUM\", \
                                        \"short\": true \
                                      } \
                                    ], \
                                    \"actions\": [ \
                                      { \
                                        \"type\": \"button\", \
                                        \"text\": \"Visit Job\", \
                                        \"url\": \"$CIRCLE_BUILD_URL\" \
                                      } \
                                    ], \
                                    \"color\": \"#1CBF43\" \
                                  } \
                                ] \
                              } " ${SLACK_WEBHOOK}
                    echo "Job completed successfully. Alert sent."
                  fi
                else
                  #If Failed
                  curl -X POST -H 'Content-type: application/json' \
                    --data "{ \
                      \"attachments\": [ \
                        { \
                          \"fallback\": \":red_circle: A $CIRCLE_JOB job has failed for $CIRCLE_PROJECT_REPONAME on the $CIRCLE_BRANCH branch! Triggered by: $CIRCLE_USERNAME\", \
                          \"text\": \":red_circle: A $CIRCLE_JOB job has failed for $CIRCLE_PROJECT_REPONAME on the $CIRCLE_BRANCH branch! Triggered by: $CIRCLE_USERNAME $SLACK_MENTIONS\", \
                          \"fields\": [ \
                            { \
                              \"title\": \"Project\", \
                              \"value\": \"$CIRCLE_PROJECT_REPONAME\", \
                              \"short\": true \
                            }, \
                            { \
                              \"title\": \"Job Number\", \
                              \"value\": \"$CIRCLE_BUILD_NUM\", \
                              \"short\": true \
                            } \
                          ], \
                          \"actions\": [ \
                            { \
                              \"type\": \"button\", \
                              \"text\": \"Visit Job\", \
                              \"url\": \"$CIRCLE_BUILD_URL\" \
                            } \
                          ], \
                          \"color\": \"#ed5c5c\" \
                        } \
                      ] \
                    } " ${SLACK_WEBHOOK}
                  echo "Job failed. Alert sent."
                fi
              fi
            else
              echo "Current branch is not included in only_for_branches filter; no status alert will be sent"
            fi
          name: Slack - Sending Status Alert
          shell: /bin/bash
          when: always
workflows:
  version: 2
  e2e_tests:
    jobs:
      - E2ETest
  build:
    jobs:
      - build
# Original config.yml file:
# version: 2.1
# orbs:
#   slack: circleci/slack@3.4.2
# jobs:
#   E2ETest:
#     docker:
#       # Image with required cypres deps
#       - image: cypress/included:3.2.0
#         environment:
#           # Enables colored output
#           TERM: xterm
#     parallelism: 1
#     steps:
#       - checkout
#       # installs cypress deps onto container ( I think )
#       - run: yarn install --frozen-lockfile
#       - run:
#           name: \"Migrating\"
#           command: npx sequelize-cli db:migrate
#       - run:
#           name: \"Running end to end tests\"
#           command: \"yarn run E2ETest\"
#       - store_artifacts:
#           path: cypress/videos/odysseyTests
#   build:
#     docker:
#       - image: circleci/node
#     steps:
#       - checkout
#       - run:
#           name: \"Installing\"
#           command: yarn install
#       - run:
#           name: \"Migrating\"
#           command: npx sequelize-cli db:migrate
#       - run:
#           name: \"Building\"
#           command: yarn build
#       - slack/status:
#           fail_only: false
#           failure_message: \":red_circle: A $CIRCLE_JOB job has failed for $CIRCLE_PROJECT_REPONAME on the $CIRCLE_BRANCH branch! Triggered by: $CIRCLE_USERNAME\"
#           only_for_branches: \"staging,develop\"
#           success_message: \":tada: A $CIRCLE_JOB job has succeeded for $CIRCLE_PROJECT_REPONAME on the $CIRCLE_BRANCH branch! Triggered by: $CIRCLE_USERNAME :rocket:\"
# workflows:
#   version: 2.1
#   e2e_tests:
#     jobs:
#       - E2ETest
#   build:
#     jobs:
#       - build
